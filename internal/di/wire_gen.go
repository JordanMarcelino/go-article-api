// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package di

import (
	"github.com/google/wire"
	"github.com/jordanmarcelino/go-article-api/internal/config"
	"github.com/jordanmarcelino/go-article-api/internal/controller"
	"github.com/jordanmarcelino/go-article-api/internal/middleware"
	"github.com/jordanmarcelino/go-article-api/internal/repository"
	"github.com/jordanmarcelino/go-article-api/internal/usecase"
	"github.com/sirupsen/logrus"
	"github.com/spf13/viper"
)

// Injectors from injector.go:

func InitializedViper() *viper.Viper {
	viperViper := config.NewViper()
	return viperViper
}

func InitializedLogrus(cfg *viper.Viper) *logrus.Logger {
	logger := config.NewLogger(cfg)
	return logger
}

func InitializedServer(cfg *viper.Viper, logger *logrus.Logger) *config.RouteConfig {
	app := config.NewFiber(cfg)
	db := config.NewDatabase(cfg, logger)
	validate := config.NewValidator(cfg)
	userRepository := repository.NewUserRepository(logger)
	userUseCase := usecase.NewUserUseCase(db, logger, validate, userRepository)
	userController := controller.NewUserController(logger, userUseCase)
	articleRepository := repository.NewArticleRepository(logger)
	articleUseCase := usecase.NewArticleUseCase(db, logger, validate, articleRepository)
	articleController := controller.NewArticleController(logger, articleUseCase)
	tagRepository := repository.NewTagRepository(logger)
	tagUseCase := usecase.NewTagUseCase(db, logger, validate, tagRepository)
	tagController := controller.NewTagController(logger, tagUseCase)
	commentRepository := repository.NewCommentRepository(logger)
	commentUseCase := usecase.NewCommentUseCase(db, logger, validate, commentRepository)
	commentController := controller.NewCommentController(logger, commentUseCase)
	v := middleware.Protected()
	routeConfig := config.NewRouteConfig(app, cfg, logger, userController, articleController, tagController, commentController, v)
	return routeConfig
}

// injector.go:

var userSet = wire.NewSet(repository.NewUserRepository, usecase.NewUserUseCase, controller.NewUserController)

var articleSet = wire.NewSet(repository.NewArticleRepository, usecase.NewArticleUseCase, controller.NewArticleController)

var tagSet = wire.NewSet(repository.NewTagRepository, usecase.NewTagUseCase, controller.NewTagController)

var commentSet = wire.NewSet(repository.NewCommentRepository, usecase.NewCommentUseCase, controller.NewCommentController)
